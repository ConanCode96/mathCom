Terminals which are not used

   FLOATING_NUMBER


State 3 conflicts: 2 shift/reduce


Grammar

    0 $accept: program $end

    1 program: program expr '\n'
    2        | '\n' program
    3        | /* empty */

    4 expr: INTEGER
    5     | expr '+' expr
    6     | expr '-' expr
    7     | expr '*' expr
    8     | expr '/' expr
    9     | expr '^' expr
   10     | '(' expr ')'


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 1 2
'(' (40) 10
')' (41) 10
'*' (42) 7
'+' (43) 5
'-' (45) 6
'/' (47) 8
'^' (94) 9
error (256)
INTEGER (258) 4
FLOATING_NUMBER (259)


Nonterminals, with rules where they appear

$accept (13)
    on left: 0
program (14)
    on left: 1 2 3, on right: 0 1 2
expr (15)
    on left: 4 5 6 7 8 9 10, on right: 1 5 6 7 8 9 10


state 0

    0 $accept: . program $end

    '\n'  shift, and go to state 1

    $default  reduce using rule 3 (program)

    program  go to state 2


state 1

    2 program: '\n' . program

    '\n'  shift, and go to state 1

    $default  reduce using rule 3 (program)

    program  go to state 3


state 2

    0 $accept: program . $end
    1 program: program . expr '\n'

    $end     shift, and go to state 4
    INTEGER  shift, and go to state 5
    '('      shift, and go to state 6

    expr  go to state 7


state 3

    1 program: program . expr '\n'
    2        | '\n' program .

    INTEGER  shift, and go to state 5
    '('      shift, and go to state 6

    INTEGER   [reduce using rule 2 (program)]
    '('       [reduce using rule 2 (program)]
    $default  reduce using rule 2 (program)

    expr  go to state 7


state 4

    0 $accept: program $end .

    $default  accept


state 5

    4 expr: INTEGER .

    $default  reduce using rule 4 (expr)


state 6

   10 expr: '(' . expr ')'

    INTEGER  shift, and go to state 5
    '('      shift, and go to state 6

    expr  go to state 8


state 7

    1 program: program expr . '\n'
    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '*' expr
    8     | expr . '/' expr
    9     | expr . '^' expr

    '-'   shift, and go to state 9
    '+'   shift, and go to state 10
    '*'   shift, and go to state 11
    '/'   shift, and go to state 12
    '^'   shift, and go to state 13
    '\n'  shift, and go to state 14


state 8

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '*' expr
    8     | expr . '/' expr
    9     | expr . '^' expr
   10     | '(' expr . ')'

    '-'  shift, and go to state 9
    '+'  shift, and go to state 10
    '*'  shift, and go to state 11
    '/'  shift, and go to state 12
    '^'  shift, and go to state 13
    ')'  shift, and go to state 15


state 9

    6 expr: expr '-' . expr

    INTEGER  shift, and go to state 5
    '('      shift, and go to state 6

    expr  go to state 16


state 10

    5 expr: expr '+' . expr

    INTEGER  shift, and go to state 5
    '('      shift, and go to state 6

    expr  go to state 17


state 11

    7 expr: expr '*' . expr

    INTEGER  shift, and go to state 5
    '('      shift, and go to state 6

    expr  go to state 18


state 12

    8 expr: expr '/' . expr

    INTEGER  shift, and go to state 5
    '('      shift, and go to state 6

    expr  go to state 19


state 13

    9 expr: expr '^' . expr

    INTEGER  shift, and go to state 5
    '('      shift, and go to state 6

    expr  go to state 20


state 14

    1 program: program expr '\n' .

    $default  reduce using rule 1 (program)


state 15

   10 expr: '(' expr ')' .

    $default  reduce using rule 10 (expr)


state 16

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    6     | expr '-' expr .
    7     | expr . '*' expr
    8     | expr . '/' expr
    9     | expr . '^' expr

    '*'  shift, and go to state 11
    '/'  shift, and go to state 12
    '^'  shift, and go to state 13

    $default  reduce using rule 6 (expr)

    Conflict between rule 6 and token '-' resolved as reduce (%left '-').
    Conflict between rule 6 and token '+' resolved as reduce (%left '+').
    Conflict between rule 6 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 6 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 6 and token '^' resolved as shift ('-' < '^').


state 17

    5 expr: expr . '+' expr
    5     | expr '+' expr .
    6     | expr . '-' expr
    7     | expr . '*' expr
    8     | expr . '/' expr
    9     | expr . '^' expr

    '*'  shift, and go to state 11
    '/'  shift, and go to state 12
    '^'  shift, and go to state 13

    $default  reduce using rule 5 (expr)

    Conflict between rule 5 and token '-' resolved as reduce (%left '-').
    Conflict between rule 5 and token '+' resolved as reduce (%left '+').
    Conflict between rule 5 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 5 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 5 and token '^' resolved as shift ('+' < '^').


state 18

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '*' expr
    7     | expr '*' expr .
    8     | expr . '/' expr
    9     | expr . '^' expr

    '^'  shift, and go to state 13

    $default  reduce using rule 7 (expr)

    Conflict between rule 7 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 7 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 7 and token '*' resolved as reduce (%left '*').
    Conflict between rule 7 and token '/' resolved as reduce (%left '/').
    Conflict between rule 7 and token '^' resolved as shift ('*' < '^').


state 19

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '*' expr
    8     | expr . '/' expr
    8     | expr '/' expr .
    9     | expr . '^' expr

    '^'  shift, and go to state 13

    $default  reduce using rule 8 (expr)

    Conflict between rule 8 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 8 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 8 and token '*' resolved as reduce (%left '*').
    Conflict between rule 8 and token '/' resolved as reduce (%left '/').
    Conflict between rule 8 and token '^' resolved as shift ('/' < '^').


state 20

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '*' expr
    8     | expr . '/' expr
    9     | expr . '^' expr
    9     | expr '^' expr .

    '^'  shift, and go to state 13

    $default  reduce using rule 9 (expr)

    Conflict between rule 9 and token '-' resolved as reduce ('-' < '^').
    Conflict between rule 9 and token '+' resolved as reduce ('+' < '^').
    Conflict between rule 9 and token '*' resolved as reduce ('*' < '^').
    Conflict between rule 9 and token '/' resolved as reduce ('/' < '^').
    Conflict between rule 9 and token '^' resolved as shift (%right '^').
